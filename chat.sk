options:
	tag: &9HK-Chat&8&l>
on script load:
	OnLoad()
	LoadConfig()
variables:
	{chat} = true
	{chat::%player%} = 0
	{automsg::timer} = 5
	{update} = true
	{automsg::enable} = false
	{slowmode} = false
	{rainbow} = false
	{rainbow::%player%} = false
function OnLoad():
	if folder "plugins/HK-Chat" doesn't exists:
		send "&6[&3HKCore&6]&cNie odnaleziono folderu HK-Chat" to console
		send "&6[&3HKCore&6]&aTworzenie..." to console
		create folder "plugins/HK-Chat"
		send "&6[&3HKCore&6]&aFolder HK-Chat zostal pomyslnie stworzony" to console
	if file "plugins/HK-Chat/config.yml" doesn't exists:
		send "&6[&3HKCore&6]&cNie odnaleziono pliku config.yml" to console
		send "&6[&3HKCore&6]&aTworzenie..." to console
		create file "plugins/HK-Chat/config.yml"
		download from "https://raw.githubusercontent.com/hiperk/Project-of-Skript/master/config.yml" to "plugins/HK-Chat/config.yml"
		send "&6[&3HKCore&6]&aPlik config zostal pomyslnie stworzony" to console
function LoadConfig():
	set {ctag} to colored single value "TAG" get of "plugins/HK-Chat/config.yml"
	set {slowmode} to yaml value "SLOWMODE-ENABLE" from "plugins/HK-Chat/config.yml"
	set {slowmodetime} to single value "SLOWMODE-TIME" get of "plugins/HK-Chat/config.yml" parsed as integer
	set {automsg::time} to single value "AutoMessgae-Time" get of "plugins/HK-Chat/config.yml" parsed as integer
	set {automsg::enable} to yaml value "AutoMessage-Enable" from "plugins/HK-Chat/config.yml"
	set {update} to yaml value "AutoUpDate" from "plugins/HK-Chat/config.yml"
	set {yver} to single value "Version" get of "plugins/HK-Chat/config.yml"
	set {chelpperm} to yaml value "Help-For-Everyone" from "plugins/HK-Chat/config.yml"
	set {censure} to yaml value "Cenzura-Enable" from "plugins/HK-Chat/config.yml"
	set {censure::list::*} to yaml list "Cenzura" from file "plugins/HK-Chat/config.yml"
function ChatOn(p: player):
	if {chat} is false:
		set {chat} to true
		set {CReson} to false
		set {timer} to false
		set {timerk} to false
		set {_fun::on::*} to yaml list "CHAT-VIEW-ON" from file "plugins/HK-Chat/config.yml"
		replace all "(NICK)" with "%{_p}%" in {_fun::on::*}
		replace all "(TAG)" with "%{ctag}%" in {_fun::on::*}
		replace all "<none>" with "Console" in {_fun::on::*}
		loop all players:
			loop {_fun::on::*}:
				send "%loop-value-2%" to loop-player
		stop
	if {chat} is true:
		send "{@tag} &8[&a&l✓&8] &cChat jest akutalnie &a&lWlaczony" to {_p}
function ChatOff(p: player):
	if {chat} is true:
		set {chat} to false
		set {_fun::off::*} to yaml list "CHAT-VIEW-OFF" from file "plugins/HK-Chat/config.yml"
		replace all "(NICK)" with "%{_p}%" in {_fun::off::*}
		replace all "(TAG)" with "%{ctag}%" in {_fun::off::*}
		replace all "<none>" with "Console" in {_fun::off::*}
		loop all players:
			loop {_fun::off::*}:
				send "%loop-value-2%" to loop-player
		stop
	if {chat} is false:
		send "{@tag} &cChat jest akutalnie &4&lWylaczony" to {_p}
function ChatOffReson(p: player, t: text) :: text:
	if {_t} is set:
		if {chat} is true:
			set {chat} to false
			set {CReson} to true
			set {Chat::Reson} to {_t}
			set {_fun::offr::*} to yaml list "CHAT-VIEW-OFF-RESON" from file "plugins/HK-Chat/config.yml"
			replace all "(NICK)" with "%{_p}%" in {_fun::offr::*}
			replace all "(TAG)" with "%{ctag}%" in {_fun::offr::*}
			replace all "(POWOD)" with "%{Chat::Reson}%" in {_fun::offr::*}
			replace all "<none>" with "Console" in {_fun::offr::*}
			loop all players:
				loop {_fun::offr::*}:
					send "%loop-value-2%" to loop-player
			stop
	if {chat} is false:
		send "{@tag} &cChat jest akutalnie &4&lWylaczony &7(Powod: %{Chat::Reson}%)" to {_p}
function ChatOFFTime(p: player, c: text):
	set {_fun::offt::*} to yaml list "CHAT-VIEW-OFF-TIME" from file "plugins/HK-Chat/config.yml"
	if {chat} is true:
		set {time} to {_c} parsed as integer
		replace all "(TAG)" with "%{ctag}%" in {_fun::offt::*}
		replace all "(NICK)" with "%{_p}%" in {_fun::offt::*}
		replace all "(CZAS)" with "%{time}%" in {_fun::offt::*}
		set {timerk} to true
		set {chat} to false
		loop {_fun::offt::*}:
			send "%loop-value%" to all players
		loop {time} times:
			if {chat} is true:
				exit loop
			if {time} > 1:
				wait 1 second
				remove 1 from {time}
				send action bar from "&1&l&k|| &3Chat zostanie &aWlaczony &3za: &6%{time}%&3s&1&l&k ||" to {_p}
				if {time} = 1:
					wait 1 second
					ChatOn({_p})
					stop
	else:
		send "{@tag} &cChat jest akutalnie &4&lWylaczony &7(Czas: %{time}%)" to {_p}
function ChatOFFTimeR(p: player, t: text, c: integer):
	if {_t} is set:
		if {chat} is true:
			set {chat} to false
			set {CReson} to true
			set {Chat::Reson} to {_t}
			set {time} to {_c}
			set {timer} to true
			set {_fun::offk::*} to yaml list "CHAT-VIEW-OFF-TIME-RESON" from file "plugins/HK-Chat/config.yml"
			replace all "(NICK)" with "%{_p}%" in {_fun::offk::*}
			replace all "(TAG)" with "%{ctag}%" in {_fun::offk::*}
			replace all "(POWOD)" with "%{Chat::Reson}%" in {_fun::offk::*}
			replace all "<none>" with "Console" in {_fun::offk::*}
			replace all "(CZAS)" with "%{time}%" in {_fun::offk::*}
			loop {_fun::offk::*}:
				send "%loop-value%" to all players
			loop {time} times:
				if {chat} is true:
					exit loop
				if {time} > 1:
					wait 1 second
					remove 1 from {time}
					send action bar from "&1&l&k|| &3Chat zostanie &aWlaczony &3za: &6%{time}%&3s&1&l&k ||" to {_p}
					if {time} = 1:
						ChatOn({_p})
						stop
function Clear(p: player):
	loop all players:
		set {_fun::clear::*} to yaml list "CHAT-VIEW-CLEAR" from file "plugins/HK-Chat/config.yml"
		replace all "(NICK)" with "%{_p}%" in {_fun::clear::*}
		replace all "(TAG)" with "%{ctag}%" in {_fun::clear::*}
		replace all "<none>" with "Console" in {_fun::clear::*}
		loop 150 times:
			send "     " to loop-player
		loop {_fun::clear::*}:
			send "%loop-value-2%" to loop-player
function AutoMessage():
	if {automsg::timer} < 1:
		if {msgadds} is not set:
			set {msgadds} to 1
		loop 50 times:
			set {_msg::%loop-number%::*} to yaml list "AutoMessgae.%loop-number%" from file "plugins/HK-Chat/config.yml"
		set {automsg::timer} to {automsg::time}
		loop all players:
			replace all "(NICK)" with "%loop-player%" in {_msg::%{msgadds}%::*}
			replace all "(TAG)" with "%{ctag}%" in {_msg::%{msgadds}%::*}
			replace all "(CZAS)" with "%now%" in {_msg::%{msgadds}%::*}
			replace all "(ONLINE)" with "%number of all players%" in {_msg::%{msgadds}%::*}
			loop {_msg::%{msgadds}%::*}:
				send "%loop-value-2%" to loop-player
		add 1 to {msgadds}
		if {_msg::%{msgadds}%::*} is set:
			stop
		else:
			set {msgadds} to 1
function AutoMessageToggle(p: player):
	if {automsg::enable} is true:
		set {automsg::enable} to false
		send "{@tag} &7AutoMessage zostal &cWylaczony" to {_p}
		stop
	if {automsg::enable} is false:
		set {automsg::enable} to true
		send "{@tag} &7AutoMessage zostal &aWlaczony" to {_p}
		stop
function SlowModeToggle(p: player):
	if {slowmode} is true:
		set {slowmode} to false
		send "{@tag} &7SlowMode zostal &cWylaczony" to {_p}
		stop
	if {slowmode} is false:
		set {slowmode} to true
		send "{@tag} &7SlowMode zostal &aWlaczony" to {_p}
		stop
function AutoUpDate(p: player):
	set {_newVersion} to result of connect to "https://raw.githubusercontent.com/hiperk/Project-of-Skript/master/wersja"
	if {update} is true:
		if {_newVersion} is {yver}:
			send " " to {_p}
			send "&2&m--------------------------------------------" to {_p}
			send "{@tag} &8[&a&l✓&8] &7Masz aktualna wersje HK-Chat &a%{_newVersion}% &8[&a&l✓&8]" to {_p}
			send "&2&m--------------------------------------------" to {_p}
			send " " to {_p}
		else:
			send " " to {_p}
			send "&4&m--------------------------------------------" to {_p}
			send "{@tag} &8[&4&l✗&8] &cMasz stara wersje HK-Chat &7%{yver}% &cnajnowsza wersja to &7%{_newVersion}% &8[&4&l✗&8]" to {_p}
			send "&4&m--------------------------------------------" to {_p}
			send " " to {_p}
function Help(p: player):
	if {chelpperm} is true:
		set {_chelp::*} to yaml list "Description-Help" from file "plugins/HK-Chat/config.yml"
		replace all "(TAG)" with "%{ctag}%" in {_chelp::*}
		replace all "(VER)" with "%{yver}%" in {_chelp::*}
		if {chat} is true:
			replace all "(SC)" with "&aWlaczony" in {_chelp::*}
			replace all "(SCR)" with "" in {_chelp::*}
			replace all "(CS)" with "" in {_chelp::*}
		if {chat} is false:
			if {CReson} is true:
				replace all "(SC)" with "&cWylaczony" in {_chelp::*}
				replace all "(SCR)" with "Powod: &c%{Chat::Reson}%" in {_chelp::*}
			else:
				replace all "(SCR)" with "" in {_chelp::*}
				replace all "(SC)" with "&cWylaczony" in {_chelp::*}
			if {timer} or {timerk} is true:
				replace all "(CS)" with "Czas: &c%{time}%" in {_chelp::*}
			else:
				replace all "(CS)" with "" in {_chelp::*}
		if {slowmode} is true:
			replace all "(SM)" with "&aWlaczony" in {_chelp::*}
		if {slowmode} is false:
			replace all "(SM)" with "&cWylaczony" in {_chelp::*}
		if {automsg::enable} is true:
			replace all "(AM)" with "&aWlaczony" in {_chelp::*}
		if {automsg::enable} is false:
			replace all "(AM)" with "&cWylaczony" in {_chelp::*}
		loop {_chelp::*}:
			send "%loop-value%" to {_p}
	else:
		if {_p} don't have permission "chat.help":
			send "&8[&4&l✗&8] &cNie masz uprawnien do tej komendy &7(chat.help)" to {_p}
function ReloadHKChat(p: player):
	LoadConfig()
	OnLoad()
	send "{@tag} &aHK-Chat zostal pomyslnie przeladowany" to {_p}
command /chat [<text>] [<text>] [<number>]:
	aliases: hcat, czat
	trigger:
		if arg 1 is not set:
			Help(player)
		if arg 1 is "on":
			if player has permission "chat.admin.on":
				ChatOn(player)
			else:
				send "&cNie masz uprawnien do tej komendy &7(chat.admin.on)"
		if arg 1 is "off":
			if player has permission "chat.admin.off":
				if arg 2 is set:
					if arg 2 contains "[" or "]":
						set {_t} to arg 2
						replace all "[" and "]" with "" in {_t}
						ChatOFFTime(player, {_t})
					else:
						if arg 3 is set:
							set {_k} to arg 3
							ChatOFFTimeR(player, arg 2, {_k})
						else:
							ChatOffReson(player, arg 2)
				if arg 2 is not set:
					ChatOff(player)
			else:
				send "&8[&4&l✗&8] &cNie masz uprawnien do tej komendy &7(chat.admin.off)"
		if arg 1 is "clear" or "cc" or "cclear":
			if player has permission "chat.admin.clear":
				Clear(player)
			else:
				send "&cNie masz uprawnien do tej komendy &7(chat.admin.clear)"
		if arg 1 is "AutoMessage" or "automsg" or "amsg":
			if player has permission "chat.admin.toggle.automessage":
				AutoMessageToggle(player)
			else:
				send "&8[&4&l✗&8] &cNie masz uprawnien do tej komendy &7(chat.admin.toggle.automessage)"
		if arg 1 is "slowmode" or "sm":
			if player has permission "chat.admin.toggle.slowmode":
				SlowModeToggle(player)
			else:
				send "&8[&4&l✗&8] &cNie masz uprawnien do tej komendy &7(chat.admin.toggle.slowmode)"
		if arg 1 is "reload":
			if player has permission "chat.admin.relaod":
				ReloadHKChat(player)
			else:
				send "&8[&4&l✗&8] &cNie masz uprawnien do tej komendy &7(chat.admin.relaod)"
		if arg 1 is "update" or "ver":
			if player has permission "chat.admin.update":
				AutoUpDate(player)
			else:
				send "&8[&4&l✗&8] &cNie masz uprawnien do tej komendy &7(chat.admin.update)"
		if arg 1 is "rainbow" or "rb":
			if player has permission "chat.rainbow":
				if {rainbow::%player%} is false:
					set {rainbow::%player%} to true
					send "{@tag} &aWlaczyles teczowy nick"
					stop
				if {rainbow::%player%} is true:
					set {rainbow::%player%} to false
					send "{@tag} &cWylaczyles teczowy nick"
					stop
		if arg 1 is "edit" or "edytuj" or "ed":
			if player has permission "chat.admin.edit":
				if arg 2 is set:
					set {Chat::Reson} to coloured arg 2
					send "{@tag} &aPomyslnie ustawiles nowy powod: &3%arg 2%"
				else:
					send "&cAktualny powod: &8(&3%{Chat::Reson}%&8)"
					send "{@tag} &7Uzyj: &c/chat &7%arg 1% &7<&cZmien powod wylaczenia chatu&7>"
			else:
				send "&8[&4&l✗&8] &cNie masz uprawnien do tej komendy &7(chat.admin.edit)"
		if arg 1 is "nospam" or "dis" or "vanish":
			if player has permission "chat.nospam":
				if {nochat::%player%} is true:
					set {nochat::%player%} to false
					send "{@tag} &aWlaczyles wiadomosci na chacie. Od teraz widzisz co pisza gracze"
					stop
				if {nochat::%player%} is false:
					set {nochat::%player%} to true
					send "{@tag} &cWylaczyles wiadomosci na chacie. Od teraz nie widzisz co pisza gracze"
					stop
				if {nochat::%player%} is not set:
					set {nochat::%player%} to false
			else:
				send "&8[&4&l✗&8] &cNie masz uprawnien do tej komendy &7(chat.nospam)"
on chat:
	if {chat} is false:
		if player don't have permission "chat.say":
			cancel event
			if {timerk} is true:
				send "{@tag} &cChat zostal wylaczony &7(Czas: %{time}%)"
			if {CReson} is true:
				if {timer} is true:
					send "{@tag} &cChat zostal wylaczony &7(Czas: %{time}%) &7(Powód: %{Chat::Reson}%)"
				else:
					send "{@tag} &cChat zostal wylaczony &7(Powód: %{Chat::Reson}%)"
			if {CReson} is false:
				if {timerk} is false:
					send "{@tag} &cChat zostal wylaczony"
	if {chat} is true:
		if {slowmode} is true:
			if player don't have permission "chat.slowmode":
				if {chat::%player%} < 1:
					set {chat::%player%} to {slowmodetime}
					stop
				if {chat::%player%} > 0:
					send "&8[&4&l✗&8] &cNastepna wiadomosc bedziesz mogl wyslac za: &7%{chat::%player%}% &csekund!"
					cancel event
				else:	 
					if {chat::%player%} < 1:
						set {chat::%player%} to {slowmodetime}
	if {nochat::%player%} is true:
		loop all players:
			remove loop-player from chat recipients
			stop
	if {rainbow::%player%} is true:
		set {_n} to player's name
		set {_l} to length of {_n}
		set {_s} to ""
		loop {_l} times:
			set {_i} to {_l} - (loop-number)
			set {_i} to {_i} + 1
			set {_k::%{_i}%} to last character of {_n}
			set {_n} to {_i}-1 first characters of {_n}
		loop {_l} times:
			set {_r} to "&a&l" or "&b&l" or "&c&l" or "&d&l" or "&e&l" or "&f&l" or "&2&l" or "&3&l" or "&5&l" or "&6&l" or "&7&l" or "&8&l" or "&9&l"
			set {_s::%loop-number%} to colored "%{_r}%%{_k::%loop-number%}%"
			set {_s} to "%{_s}%%{_s::%loop-number%}%"
		set {_d} to player's display name
		set {_p} to player's name
		replace all "%{_p}%" with {_s} in {_d}
		set player's display name to {_d}
	if player has permission "chat.tecza":
		set {_zabezpieczenie} to 0
		while message contains "&t":
			add 1 to {_zabezpieczenie}
			{_zabezpieczenie} is more than 10:
				stop
			set {_t} to first index of "&t" in message # pozycja tagu (&t) do formatowania
	
			set {_tf} to subtext of message from character ({_t}) to character (length of message) # tekst do formatowania łącznie z tekstem po nim
			replace "&t" in {_tf} with "" # usuwanie tagu z tekstu do formatowania
	
			set {_nc1} to (first index of "&" in {_tf} - 1) # pozycja ewentualnego nastepnego tagu
			{_nc1} is -1:                       # gdyby nie było następnego tagu 
				set {_nc1} to (length of {_tf}) # przypisywana jest pozycja ostatniego znaku tekstu
			set {_nc2} to (first index of "@" in {_tf} - 1)
			{_nc2} is -1:
				set {_nc2} to (length of {_tf})
			set {_nc3} to (first index of "&f[&e%rounded x location of player%&f|&e%rounded y location of player%&f|&e%rounded z location of player%&f]" in {_tf} - 1)
			{_nc3} is -1:
				set {_nc3} to (length of {_tf})
			
			{_nc1} is less than {_nc2} and {_nc3}:
				set {_nc} to {_nc1}
			{_nc2} is less than {_nc3} and {_nc1}:
				set {_nc} to {_nc2}
			{_nc3} is less than {_nc1} and {_nc2}:
				set {_nc} to {_nc3}
	
			set {_tf} to subtext of {_tf} from characters 1 to ({_nc}) # usuwanie tekstu do formatowania od następnego tagu
			
			set {_tf::*} to {_tf} split at ""
			set {_nr} to 1 # predefiniowanie
			set {_w} to "" # pomocniczych zmiennych
			loop {_tf::*}:
				loop-value is "":
					delete {_tf::%loop-index%}
				loop-value is " ":
					set {_w} to "%{_w}% "
				loop-value is not "" or " ":
					{_nr} is 1:
						set {_c} to "&5"
					{_nr} is 2:
						set {_c} to "&1"
					{_nr} is 3:
						set {_c} to "&9"
					{_nr} is 4:
						set {_c} to "&2"
					{_nr} is 5:
						set {_c} to "&a"
					{_nr} is 6:
						set {_c} to "&e"
					{_nr} is 7:
						set {_c} to "&6"
					{_nr} is 8:
						set {_c} to "&c"
					{_nr} is 9:
						set {_c} to "&4"
					{_nr} is 10:
						set {_c} to "&3"
					{_nr} is 11:
						set {_c} to "&f"
					{_nr} is 12:
						set {_c} to "&d"
					set {_w} to "%{_w}%%{_c}%%loop-value%"
				add 1 to {_nr}
				{_nr} is 13:
					set {_nr} to 1
			replace "&t%{_tf}%" in message with "%{_w}%&r"
every 1 seconds:
	if {automsg::enable} is true:
		remove 1 from {automsg::timer}
	if {slowmode} is true:
		loop all players:
			remove 1 from {chat::%loop-player%}
	if {automsg::enable} is true:
		AutoMessage()
